import argparse
import os
import time

from margo import MarkerGenerator

wd = os.getcwd()
os.chdir(os.path.join(os.path.dirname(__file__), ".."))

parser = argparse.ArgumentParser(description='Generate astir marker')
parser.add_argument("expr_data", help="Path to expression matrix which is to be used for astir classification. \
                    Currently supported formats: csv file, anndata(h5ad) file and SingleCellExperiment or Seurat object in rds file")
parser.add_argument("-y", "--marker_yaml", 
                    default='',
                    help="Path to output marker yaml file.")
parser.add_argument("-d", "--database",
                    nargs='+',
                    default=[],
                    help="Specified one or more databases. Separate them with spaces (e.g. '-d panglao cellmarker').\
                         If not specified or specified with 'all'(-d all), all databases will be used.\
                        ---------------------------------------------------- Currently available databases: \
                        'panglao', 'cellmarker'")
parser.add_argument("-u", "--update_database", 
                    action='store_true',
                    help="Update databases specified by '-d' from the internet if included.")
parser.add_argument("-m", "--min_marker_per_celltype", 
                    type=int,
                    default=2,
                    help="Minimum marker per cell type needed to have to be included, defaulted to 2.")
parser.add_argument("-t", "--tissue",
                    nargs='+',
                    default=[],
                    help="Tissue specified to be searched within. If meant to include more than one tissue, \
                        seperate them with space (e.g. '-t Blood Breast'). If specified with 'all' ('-t all')\
                         or not specified (flag not included), the whole dataset is to be searched within.\
                        ---------------------------------------------------- Available tissues in CellMarker Database: \
                        'Abdominal adipose tissue', 'Adipose tissue', 'Adrenal gland', 'Adventitia', 'Airway epithelium',\
                         'Alveolus', 'Amniotic fluid', 'Amniotic membrane', 'Antecubital vein', 'Anterior cruciate ligament',\
                         'Artery', 'Ascites', 'Bladder', 'Blood', 'Blood vessel', 'Bone', 'Bone marrow', 'Brain', 'Breast',\
                         'Bronchoalveolar system', 'Brown adipose tissue', 'Cartilage', 'Chorionic villus', 'Colon', 'Colorectum',\
                         'Cornea', 'Corneal endothelium', 'Corneal epithelium', 'Corpus luteum', 'Decidua', 'Deciduous tooth',\
                         'Dental pulp', 'Dermis', 'Dorsolateral prefrontal cortex', 'Duodenum', 'Embryo', 'Embryoid body',\
                         'Embryonic brain', 'Embryonic prefrontal cortex', 'Embryonic stem cell', 'Endometrium',\
                         'Endometrium stroma', 'Epithelium', 'Esophagus', 'Eye', 'Fat pad', 'Fetal brain', 'Fetal gonad',\
                         'Fetal kidney', 'Fetal liver', 'Fetal pancreas', 'Foreskin', 'Gall bladder', 'Gastric corpus',\
                         'Gastric epithelium', 'Gastric gland', 'Gastrointestinal tract', 'Germ', 'Gingiva', 'Gonad',\
                         'Gut', 'Hair follicle', 'Heart', 'Hippocampus', 'Inferior colliculus', 'Intervertebral disc',\
                         'Intestinal crypt', 'Intestine', 'Jejunum', 'Kidney', 'Lacrimal gland', 'Large intestine',\
                         'Laryngeal squamous epithelium', 'Larynx', 'Ligament', 'Limbal epithelium', 'Liver', 'Lung',\
                         'Lymph', 'Lymph node', 'Lymphoid tissue', 'Mammary epithelium', 'Mammary gland', 'Meniscus',\
                         'Midbrain', 'Molar', 'Muscle', 'Myocardium', 'Myometrium', 'Nasal concha', 'Nasal epithelium',\
                         'Nerve', 'Nucleus pulposus', 'Optic nerve', 'Oral cavity', 'Oral mucosa', 'Osteoarthritic cartilage',\
                         'Ovarian cortex', 'Ovarian follicle', 'Ovary', 'Oviduct', 'Pancreas', 'Pancreatic acinar tissue',\
                         'Pancreatic islet', 'Parotid gland', 'Periodontal ligament', 'Periosteum', 'Peripheral blood',\
                         'Placenta', 'Plasma', 'Pleura', 'Pluripotent stem cell', 'Premolar', 'Primitive streak',\
                         'Prostate', 'Pyloric gland', 'Rectum', 'Renal glomerulus', 'Retina', 'Retinal pigment epithelium',\
                         'Salivary gland', 'Scalp', 'Sclerocorneal tissue', 'Seminal plasma', 'Serum', 'Sinonasal mucosa',\
                         'Skeletal muscle', 'Skin', 'Small intestinal crypt', 'Small intestine', 'Spinal cord', 'Spleen',\
                         'Splenic red pulp', 'Sputum', 'Stomach', 'Subcutaneous adipose tissue', 'Submandibular gland',\
                         'Sympathetic ganglion', 'Synovial fluid', 'Synovium', 'Tendon', 'Testis', 'Thymus', 'Thyroid',\
                         'Tongue', 'Tonsil', 'Tooth', 'Umbilical cord', 'Umbilical cord blood', 'Umbilical vein',\
                         'Undefined', 'Urine', 'Uterus', 'Vagina', 'Venous blood', 'Visceral adipose tissue', 'Vocal fold',\
                         'Whartons jelly', 'White adipose tissue'\
                        ---------------------------------------------------- Available tissues in Panglao Database: \
                        'Adrenal glands', 'Blood', 'Bone', 'Brain', 'Connective tissue', 'Embryo', 'Epithelium', 'Eye',\
                         'GI tract', 'Heart', 'Immune system', 'Kidney', 'Liver', 'Lungs', 'Mammary gland', 'Olfactory system',\
                         'Oral cavity', 'Pancreas', 'Parathyroid glands', 'Placenta', 'Reproductive', 'Skeletal muscle', 'Skin',\
                         'Smooth muscle', 'Thymus', 'Thyroid', 'Urinary bladder', 'Vasculature', 'Zygote'")
args = parser.parse_args()


if __name__ == "__main__":
    output = os.path.join(wd, args.marker_yaml)
    exp_in = os.path.join(wd, args.expr_data)
    if output == '':
        # if not os.path.exists(f'{os.path.dirname(exp_in)}/margo_output'):
        #     os.mkdir(f'{os.path.dirname(exp_in)}/margo_output')
        output = f'{wd}/{(exp_in.split("/")[-1]).split(".")[0]}_marker({time.strftime("%m.%d.%y-%H:%M", time.localtime())}).yml'
    tissue = args.tissue
    if tissue == [] or "all" in tissue:
        tissue = None
    database = args.database
    if database == [] or "all" in database:
        database = None

    mg = MarkerGenerator(path=exp_in, database=database, update_db=args.update_database)
    mg.construct_marker_mat_from_db(
        tissue=tissue,
        min_marker=args.min_marker_per_celltype
    )
    mg.to_yaml(output)

    print(f"Corresponding marker file generated as {output}.")

# margo ../BaselTMA_SP43_115_X4Y8.csv ../test_marker.yml -d panglao -t Brain "Immune system" -m 3
